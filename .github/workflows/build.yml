name: Running unittests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unittests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.9]
        django: ["2.2", "3.1"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_test.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run unittests
      env:
        TOX_ENV: py${{ matrix.python-version}}-django${{ matrix.django }}
      run: |
        tox -e $TOX_ENV

  flake8:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run linting
        run: flake8

  integrationtests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channels: ["2.4", "3.0"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_test.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run integration tests
        env:
          TOX_ENV: py3.9-django3.1-channels${{ matrix.channels }}-cypress
        run: |
          tox -e $TOX_ENV
